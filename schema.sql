/* Database schema to keep the structure of entire database. */
CREATE DATABASE vet_clinic
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'C.UTF-8'
    LC_CTYPE = 'C.UTF-8'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;


CREATE TABLE IF NOT EXISTS public.animals
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name text COLLATE pg_catalog."default" NOT NULL,
    date_of_birth date NOT NULL,
    escape_attempts integer NOT NULL,
    neutered boolean NOT NULL,
    weight_kg numeric NOT NULL,
    CONSTRAINT animals_pkey PRIMARY KEY (id)
);

ALTER TABLE public.animals;
ADD COLUMN species text;


CREATE TABLE IF NOT EXISTS public.species
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1000000 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name text COLLATE pg_catalog."default",
    CONSTRAINT species_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.owners
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1000 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    full_name text COLLATE pg_catalog."default",
    age integer,
    CONSTRAINT owners_pkey PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS public.owners
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1000 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    full_name text COLLATE pg_catalog."default",
    age integer,
    CONSTRAINT owners_pkey PRIMARY KEY (id)
)


-- Table: public.animals
-- DROP TABLE IF EXISTS public.animals;
CREATE TABLE IF NOT EXISTS public.animals
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name text COLLATE pg_catalog."default" NOT NULL,
    date_of_birth date NOT NULL,
    escape_attempts integer NOT NULL,
    neutered boolean NOT NULL,
    weight_kg numeric NOT NULL,
    species_id integer,
    owner_id integer,
    CONSTRAINT animals_pkey PRIMARY KEY (id),
    CONSTRAINT owner_id FOREIGN KEY (owner_id)
        REFERENCES public.owners (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT species_id FOREIGN KEY (species_id)
        REFERENCES public.species (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
);


INSERT INTO public.owners (full_name, age) VALUES ('Sam Smith'::text, '34'::integer)
 returning id;

INSERT INTO public.owners (full_name, age) VALUES ('Jennifer Onwell'::text, '19'::integer)
 returning id;

INSERT INTO public.owners (full_name, age) VALUES ('Bob'::text, '45'::integer)
 returning id;

INSERT INTO public.owners (full_name, age) VALUES ('Melody Pond'::text, '77'::integer)
 returning id;

INSERT INTO public.owners (full_name, age) VALUES ('Dean Winchester'::text, '14'::integer)
 returning id;

INSERT INTO public.owners (full_name, age) VALUES ('Jodie Whittaker'::text, '38'::integer)
 returning id;


INSERT INTO public.species (name) VALUES ('Pokemon'::text)
 returning id;

INSERT INTO public.species (name) VALUES ('Digimon'::text)
 returning id;


UPDATE public.animals SET species_id = 1000001 WHERE name like '%mon';
UPDATE public.animals SET species_id = 1000000 WHERE name NOT LIKE '%mon';


UPDATE public.animals SET owner_id = '1000'::integer WHERE id = 1;
UPDATE public.animals SET owner_id = '1001'::integer WHERE id = 2;
UPDATE public.animals SET owner_id = '1001'::integer WHERE id = 3;
UPDATE public.animals SET owner_id = '1002'::integer WHERE id = 4;
UPDATE public.animals SET owner_id = '1002'::integer WHERE id = 7;
UPDATE public.animals SET owner_id = '1003'::integer WHERE id = 5;
UPDATE public.animals SET owner_id = '1003'::integer WHERE id = 8;
UPDATE public.animals SET owner_id = '1003'::integer WHERE id = 11;
UPDATE public.animals SET owner_id = '1004'::integer WHERE id = 9;
UPDATE public.animals SET owner_id = '1004'::integer WHERE id = 10;
